name: Flutter CI/CD Pipeline

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - '.vscode/**'
      - 'docs/**'
  pull_request:
    branches: [main]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - '.vscode/**'
      - 'docs/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FLUTTER_VERSION: '3.16.9'
  JAVA_VERSION: '17'
  XCODE_VERSION: '15.2'
  FLUTTER_CACHE_PATH: ~/.pub-cache
  MIN_COVERAGE: 80

jobs:
  setup:
    name: Setup and Validate
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
      - name: Cache pub dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.FLUTTER_CACHE_PATH }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-
      - name: Install dependencies
        run: flutter pub get
      - name: Run code generation
        run: flutter pub run build_runner build --delete-conflicting-outputs

  analyze:
    name: Static Analysis
    needs: setup
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
      - name: Restore pub cache
        uses: actions/cache@v3
        with:
          path: ${{ env.FLUTTER_CACHE_PATH }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
      - name: Install dependencies
        run: flutter pub get
      - name: Verify formatting
        run: dart format --set-exit-if-changed .
      - name: Analyze project source
        run: flutter analyze --fatal-infos
      - name: Run very_good_analysis
        run: |
          flutter pub global activate very_good_cli
          flutter pub global run very_good_cli analyze

  test:
    name: Run Tests
    needs: analyze
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
      - name: Restore pub cache
        uses: actions/cache@v3
        with:
          path: ${{ env.FLUTTER_CACHE_PATH }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
      - name: Install dependencies
        run: flutter pub get
      - name: Run unit tests with coverage
        run: flutter test --coverage
      - name: Check coverage threshold
        run: |
          COVERAGE=$(lcov --summary coverage/lcov.info | grep 'lines......' | cut -d ':' -f 2 | cut -d '%' -f 1 | tr -d ' ')
          if (( $(echo "$COVERAGE < $MIN_COVERAGE" | bc -l) )); then
            echo "Test coverage $COVERAGE% is below minimum $MIN_COVERAGE%"
            exit 1
          fi
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: coverage/lcov.info
          fail_ci_if_error: true
      - name: Store test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            coverage/
            test/reports/
          retention-days: 14

  build-android:
    name: Build Android
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
      - name: Restore pub cache
        uses: actions/cache@v3
        with:
          path: ${{ env.FLUTTER_CACHE_PATH }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
      - name: Install dependencies
        run: flutter pub get
      - name: Setup signing
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_FILE }}
          KEY_PROPERTIES: ${{ secrets.KEY_PROPERTIES }}
        run: |
          if [ -n "$KEYSTORE_BASE64" ] && [ -n "$KEY_PROPERTIES" ]; then
            echo "$KEYSTORE_BASE64" | base64 --decode > android/app/keystore.jks
            echo "$KEY_PROPERTIES" > android/key.properties
          fi
      - name: Build APK and Bundle
        run: |
          flutter build apk --release --split-per-abi
          flutter build appbundle --release
      - name: Upload Android builds
        uses: actions/upload-artifact@v4
        with:
          name: android-builds
          path: |
            build/app/outputs/flutter-apk/*.apk
            build/app/outputs/bundle/release/app-release.aab
          retention-days: 14

  build-ios:
    name: Build iOS
    needs: test
    runs-on: macos-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
      - name: Restore pub cache
        uses: actions/cache@v3
        with:
          path: ${{ env.FLUTTER_CACHE_PATH }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
      - name: Select Xcode version
        run: sudo xcode-select -s /Applications/Xcode_${{ env.XCODE_VERSION }}.app/Contents/Developer
      - name: Install dependencies
        run: |
          flutter pub get
          cd ios && pod install && cd ..
      - name: Build iOS
        run: flutter build ios --release --no-codesign
      - name: Upload iOS build
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: build/ios/iphoneos
          retention-days: 14

  notify:
    name: Notify Status
    needs: [build-android, build-ios]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Check build status
        if: ${{ needs.build-android.result != 'success' || needs.build-ios.result != 'success' }}
        run: exit 1
      - name: Send Discord notification
        if: failure() && github.ref == 'refs/heads/main'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'ðŸš¨ Build failed for ${{ github.repository }} on main branch'

  release:
    name: Create Release
    needs: [build-android, build-ios]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/android-builds/*.apk
            artifacts/android-builds/*.aab
            artifacts/ios-build/*
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}