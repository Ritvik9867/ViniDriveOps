name: Flutter CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

env:
  FLUTTER_VERSION: '3.16.9'
  JAVA_VERSION: '17'
  XCODE_VERSION: '15.2'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Cache Flutter Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            .dart_tool
            build
            **/.dart_tool
            **/.flutter-plugins
            **/.flutter-plugins-dependencies
          key: flutter-${{ runner.os }}-${{ env.FLUTTER_VERSION }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            flutter-${{ runner.os }}-${{ env.FLUTTER_VERSION }}-
            flutter-${{ runner.os }}-
      
      - name: Install dependencies
        run: |
          flutter pub get
          flutter pub run build_runner build --delete-conflicting-outputs

      - name: Run Tests
        run: flutter test --coverage

      - name: Store test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: coverage/
          if-no-files-found: warn
          retention-days: 14

  build-android:
    name: Build Android
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Cache Flutter Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            .dart_tool
            build
            **/.dart_tool
            **/.flutter-plugins
            **/.flutter-plugins-dependencies
          key: flutter-${{ runner.os }}-${{ env.FLUTTER_VERSION }}-${{ hashFiles('**/pubspec.lock') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Build APK
        run: |
          flutter pub get
          flutter build apk --release

      - name: Build App Bundle
        run: flutter build appbundle --release

      - name: Store Android build
        uses: actions/upload-artifact@v3
        with:
          name: android-build
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
          retention-days: 14

  build-ios:
    name: Build iOS
    needs: test
    runs-on: macos-latest
    timeout-minutes: 60

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Cache Flutter Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            .dart_tool
            build
            **/.dart_tool
            **/.flutter-plugins
            **/.flutter-plugins-dependencies
          key: flutter-${{ runner.os }}-${{ env.FLUTTER_VERSION }}-${{ hashFiles('**/pubspec.lock') }}

      - name: Cache CocoaPods Dependencies
        uses: actions/cache@v3
        with:
          path: ios/Pods
          key: pods-${{ runner.os }}-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            pods-${{ runner.os }}-

      - name: Install Dependencies
        run: |
          flutter pub get
          cd ios && pod install && cd ..

      - name: Build iOS
        run: |
          flutter build ios --release --no-codesign

      - name: Store iOS build
        uses: actions/upload-artifact@v3
        with:
          name: ios-build
          path: build/ios/iphoneos
          retention-days: 14

  notify:
    name: Notify Status
    needs: [build-android, build-ios]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Check Build Status
        id: status
        run: |
          if [[ "${{ needs.build-android.result }}" == "success" && "${{ needs.build-ios.result }}" == "success" ]]; then
            echo "status=success" >> $GITHUB_OUTPUT
            echo "color=65280" >> $GITHUB_OUTPUT
            echo "title= Build Successful" >> $GITHUB_OUTPUT
          else
            echo "status=failure" >> $GITHUB_OUTPUT
            echo "color=16711680" >> $GITHUB_OUTPUT
            echo "title= Build Failed" >> $GITHUB_OUTPUT
          fi

      - name: Send Discord Notification
        if: ${{ vars.DISCORD_WEBHOOK_URL != '' }}
        env:
          DISCORD_URL: ${{ vars.DISCORD_WEBHOOK_URL }}
          BUILD_STATUS: ${{ steps.status.outputs.status }}
          BUILD_COLOR: ${{ steps.status.outputs.color }}
          BUILD_TITLE: ${{ steps.status.outputs.title }}
        run: |
          curl -H "Content-Type: application/json" -X POST -d '{
            "embeds": [{
              "title": "'"$BUILD_TITLE"'",
              "description": "Flutter CI/CD pipeline completed",
              "color": '"$BUILD_COLOR"',
              "fields": [
                {
                  "name": "Repository",
                  "value": "${{ github.repository }}",
                  "inline": true
                },
                {
                  "name": "Branch",
                  "value": "${{ github.ref }}",
                  "inline": true
                },
                {
                  "name": "Status",
                  "value": "'"${BUILD_STATUS^}"'",
                  "inline": true
                }
              ]
            }]
          }' "$DISCORD_URL"