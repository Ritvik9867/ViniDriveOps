name: Flutter CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  FLUTTER_VERSION: '3.22.0'
  JAVA_VERSION: '17'
  DART_SDK_VERSION: '>=3.7.2 <3.8.0'  # More specific version constraint
  GRADLE_VERSION: '7.6'

jobs:
  validate-setup:
    name: Validate Project Setup
    runs-on: ubuntu-latest
    timeout-minutes: 5  # Reduced from 10 as setup validation is usually quick
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify pubspec.yaml
        id: verify-pubspec
        run: |
          if [ ! -f "pubspec.yaml" ]; then
            echo "::error::pubspec.yaml not found"
            exit 1
          fi
          
          # Check SDK constraints
          SDK_CONSTRAINT=$(grep -A 1 'environment:' pubspec.yaml | grep 'sdk:' || echo '')
          if [ -z "$SDK_CONSTRAINT" ]; then
            echo "Adding Dart SDK constraint to pubspec.yaml"
            awk '/name:/{print;print "\nenvironment:\n  sdk: \"'"$DART_SDK_VERSION"'\"\n";next}1' pubspec.yaml > pubspec.yaml.tmp
            mv pubspec.yaml.tmp pubspec.yaml
          fi
        shell: bash

  code-quality:
    name: Code Quality Checks
    needs: validate-setup
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
          cache-key: flutter-${{ env.FLUTTER_VERSION }}-${{ hashFiles('**/pubspec.lock') }}

      - name: Install dependencies
        run: flutter pub get

      - name: Check code formatting
        run: |
          echo "Checking code formatting..."
          flutter format --set-exit-if-changed .

      - name: Analyze project
        run: |
          echo "Running Flutter analyze..."
          flutter analyze
        # Removed the || exit 0 to make the workflow fail on analysis errors

  build-and-test:
    name: Build and Test
    needs: code-quality
    runs-on: ubuntu-latest
    timeout-minutes: 45  # Increased from 30 for larger projects
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'
          cache-dependency-path: "**/build.gradle*"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
          cache-key: flutter-${{ env.FLUTTER_VERSION }}-${{ hashFiles('**/pubspec.lock') }}

      - name: Cache Pub dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ runner.tool_cache }}/flutter
            ~/.pub-cache
            ~/AppData/Local/Pub/Cache
            ~/Library/Caches/Pub
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml', '**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dependencies
        run: |
          echo "Installing Flutter dependencies..."
          flutter clean
          flutter pub get
          echo "Dependencies installed successfully"

      - name: Run tests
        run: |
          echo "Running Flutter tests..."
          flutter test --coverage --machine > test-report.json
          flutter test --coverage --test-randomize-ordering-seed random

      - name: Build Android APK
        run: |
          echo "Building release APK..."
          flutter build apk --release
          
      - name: Build Android App Bundle
        run: |
          echo "Building App Bundle..."
          flutter build appbundle --release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: release-apk
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
          retention-days: 14

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            coverage/
            test/reports/
            test-report.json
          retention-days: 14

      - name: Build status summary
        if: always()
        run: |
          echo "Build Status Summary:"
          echo "-------------------"
          echo "✓ Project setup validation"
          echo "✓ Code quality checks"
          echo "✓ Dependencies installation"
          if [ -f "coverage/lcov.info" ]; then
            echo "✓ Tests executed (results in artifacts)"
          else
            echo "❌ Tests failed"
            exit 1
          fi
          if [ -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
            echo "✓ APK build successful"
          else
            echo "❌ APK build failed"
            exit 1
          fi
          if [ -f "build/app/outputs/bundle/release/app-release.aab" ]; then
            echo "✓ App Bundle build successful"
          else
            echo "❌ App Bundle build failed"
            exit 1
          fi