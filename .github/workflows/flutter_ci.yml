name: Flutter CI/CD

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - '.vscode/**'
  pull_request:
    branches: [main]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - '.vscode/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FLUTTER_VERSION: '3.16.9'
  JAVA_VERSION: '17'
  XCODE_VERSION: '15.2'
  DART_SDK_VERSION: '>=3.2.6 <4.0.0'

jobs:
  validate:
    name: Validate Environment
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      cache-hit: ${{ steps.flutter-cache.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: false
      
      - name: Cache Flutter dependencies
        id: flutter-cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ runner.tool_cache }}/flutter
            **/.dart_tool
            **/.flutter-plugins
            **/.flutter-plugins-dependencies
            **/.pub-cache
          key: ${{ runner.os }}-flutter-${{ env.FLUTTER_VERSION }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-${{ env.FLUTTER_VERSION }}-
            ${{ runner.os }}-flutter-
      
      - name: Validate Flutter installation
        run: |
          flutter doctor -v
          flutter --version
          dart --version

  analyze:
    name: Static Analysis
    needs: validate
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: false
      
      - name: Restore Flutter cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ runner.tool_cache }}/flutter
            **/.dart_tool
            **/.flutter-plugins
            **/.flutter-plugins-dependencies
            **/.pub-cache
          key: ${{ runner.os }}-flutter-${{ env.FLUTTER_VERSION }}-${{ hashFiles('**/pubspec.lock') }}
      
      - name: Install dependencies
        run: |
          flutter pub get || {
            echo "::warning::Failed to get dependencies. Retrying with upgrade..."
            flutter pub upgrade
            flutter pub get
          }
      
      - name: Verify formatting
        run: dart format --set-exit-if-changed .
      
      - name: Analyze project source
        run: flutter analyze --fatal-infos
      
      - name: Run code generation
        run: flutter pub run build_runner build --delete-conflicting-outputs
      
      - name: Run static analysis
        run: |
          flutter pub global activate custom_lint
          flutter pub global run custom_lint
      
      - name: Check for outdated dependencies
        run: flutter pub outdated

  test:
    name: Run Tests
    needs: analyze
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: false
      
      - name: Restore Flutter cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ runner.tool_cache }}/flutter
            **/.dart_tool
            **/.flutter-plugins
            **/.flutter-plugins-dependencies
            **/.pub-cache
          key: ${{ runner.os }}-flutter-${{ env.FLUTTER_VERSION }}-${{ hashFiles('**/pubspec.lock') }}
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Run tests with coverage
        run: flutter test --coverage
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: coverage/lcov.info
          fail_ci_if_error: false
      
      - name: Store test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            coverage/
            test/reports/
          retention-days: 14

  build-android:
    name: Build Android
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: false
      
      - name: Restore Flutter cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ runner.tool_cache }}/flutter
            **/.dart_tool
            **/.flutter-plugins
            **/.flutter-plugins-dependencies
            **/.pub-cache
          key: ${{ runner.os }}-flutter-${{ env.FLUTTER_VERSION }}-${{ hashFiles('**/pubspec.lock') }}
      
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Setup Android signing
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_FILE }}
          KEY_PROPERTIES: ${{ secrets.KEY_PROPERTIES }}
        run: |
          if [ -n "$KEYSTORE_BASE64" ] && [ -n "$KEY_PROPERTIES" ]; then
            mkdir -p android/app
            echo "$KEYSTORE_BASE64" | base64 --decode > android/app/keystore.jks
            echo "$KEY_PROPERTIES" > android/key.properties
          fi
      
      - name: Build Android APK
        run: |
          flutter build apk --release || {
            echo "::error::APK build failed. Running flutter doctor for diagnostics..."
            flutter doctor -v
            exit 1
          }
      
      - name: Build Android App Bundle
        run: |
          flutter build appbundle --release || {
            echo "::error::App Bundle build failed. Running flutter doctor for diagnostics..."
            flutter doctor -v
            exit 1
          }
      
      - name: Upload Android builds
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: android-builds
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
          retention-days: 14

  build-ios:
    name: Build iOS
    needs: test
    runs-on: macos-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: false
      
      - name: Restore Flutter cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ runner.tool_cache }}/flutter
            **/.dart_tool
            **/.flutter-plugins
            **/.flutter-plugins-dependencies
            **/.pub-cache
          key: ${{ runner.os }}-flutter-${{ env.FLUTTER_VERSION }}-${{ hashFiles('**/pubspec.lock') }}
      
      - name: Cache CocoaPods dependencies
        uses: actions/cache@v3
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      
      - name: Select Xcode version
        run: sudo xcode-select -s /Applications/Xcode_${{ env.XCODE_VERSION }}.app/Contents/Developer
      
      - name: Install dependencies
        run: |
          flutter pub get
          cd ios
          pod install --repo-update
          cd ..
      
      - name: Build iOS
        run: |
          flutter build ios --release --no-codesign || {
            echo "::error::iOS build failed. Running flutter doctor for diagnostics..."
            flutter doctor -v
            exit 1
          }
      
      - name: Upload iOS build
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: build/ios/iphoneos
          retention-days: 14

  notify:
    name: Notify Status
    needs: [build-android, build-ios]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Check build status
        if: ${{ needs.build-android.result != 'success' || needs.build-ios.result != 'success' }}
        run: exit 1
      
      - name: Send failure notification
        if: failure() && github.ref == 'refs/heads/main'
        run: |
          if [ -n "${{ secrets.DISCORD_WEBHOOK_URL }}" ]; then
            curl -H "Content-Type: application/json" -X POST -d '{
              "content": null,
              "embeds": [{
                "title": "⚠️ Build Failed",
                "description": "The main branch build has failed. Please check the logs for details.",
                "color": 15158332,
                "fields": [
                  {
                    "name": "Repository",
                    "value": "'$GITHUB_REPOSITORY'",
                    "inline": true
                  },
                  {
                    "name": "Commit",
                    "value": "'$GITHUB_SHA'",
                    "inline": true
                  }
                ],
                "footer": {
                  "text": "GitHub Actions CI/CD"
                }
              }]
            }' "${{ secrets.DISCORD_WEBHOOK_URL }}"
          fi